name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          args: --verbose

  go-mod-tidy:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
      - name: Run go mod tidy
        run: go mod tidy
      - name: Check go.mod changes
        run: git diff --exit-code;

  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
      - name: Run go generate
        run: go generate ./... && go mod tidy
      - name: Check generated files
        run: git diff --exit-code

  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        go: ['1.22', '1.23']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run cmd tests
        run: go test -race -count=1 ./...
